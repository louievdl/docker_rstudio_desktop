# Running on a MobaXterm terminal under Windows 11, WSL2 Ubuntu 24.04


## 0. INTALL DOCKER AND APPTAINER

sudo snap install docker
sudo snap enable docker
sudo snap start docker
docker --version
#Docker version 28.1.1, build 068a01e

sudo add-apt-repository -y ppa:apptainer/ppa
sudo apt update
sudo apt install -y apptainer
apptainer --version
#apptainer version 1.3.4

## 1. BUILD INITIAL DOCKER IMAGE WITH SUPPORTING MACHINE LIBRARIES, BUT ONLY BASIC R LIBRARIES

vi dockerfile_rstudio
sudo docker build -t louievdl/rstudio:4.5.0 -f dockerfile_rstudio --shm-size=64m .

# try running rstudio from docker image
sudo docker run --rm   --mount type=bind,src=$HOME,dst=$HOME,readonly=false,bind-propagation=rprivate   --mount type=bind,src=$(pwd),dst=$(pwd),readonly=false,bind-propagation=rprivate   --mount type=bind,src=$HOME/.Xauthority,dst=$HOME/.Xauthority,readonly=true  --mount type=bind,src=/tmp/.X11-unix,dst=/tmp/.X11-unix,readonly=true --mount type=bind,src=/run/dbus/system_bus_socket,dst=/run/dbus/system_bus_socket,readonly=false --user 0:0   --env DISPLAY=localhost:10.0   --net=host   louievdl/rstudio:4.5.0 rstudio --no-sandbox
# MoTTY X11 proxy: Unsupported authorisation protocol
# [1:0612/075814.219309:ERROR:ozone_platform_x11.cc(246)] Missing X server or $DISPLAY
# [1:0612/075814.219421:ERROR:env.cc(257)] The platform failed to initialize.  Exiting.

# save as a tar archive
sudo docker save --output ../../louievdl_rstudio_450.tar louievdl/rstudio:4.5.0
sudo chown $(id -u):$(id -g) ../../louievdl_rstudio_450.tar
sudo chmod a+r ../../louievdl_rstudio_450.tar

# convert to apptainer/singularity image - note, binding of .X11-unix is Windows/WSL2/Ubuntu-24.04 specific but may not be necessary
apptainer build ../../louievdl_rstudio_450.sif docker-archive://../../louievdl_rstudio_450.tar
apptainer exec --bind /tmp/.X11-unix:/tmp/.X11-unix --bind $HOME:$HOME:rw,$(pwd):$(pwd):rw,/run --pwd $(pwd) --home $HOME --env DISPLAY=$DISPLAY ../../louievdl_rstudio_450.sif /bin/bash # rstudio --no-sandbox # success
apptainer run --bind /tmp/.X11-unix:/tmp/.X11-unix --bind $HOME:$HOME:rw,$(pwd):$(pwd):rw,/run --pwd $(pwd) --home $HOME --env DISPLAY=$DISPLAY ../../louievdl_rstudio_450.sif # success opening Rstudio
# other variants:
apptainer run --bind /tmp/.X11-unix:/tmp/.X11-unix --bind $HOME:$HOME:rw,$(pwd):$(pwd):rw,/run --pwd $(pwd) --home $HOME --env DISPLAY=$DISPLAY --env QTWEBENGINE_CHROMIUM_FLAGS="--disable-gpu" ../../louievdl_rstudio_450.sif # disabling gpu use by chromium, the web browser context in which Rstudio runs
apptainer run --bind $HOME:$HOME:rw,$(pwd):$(pwd):rw,/run --pwd $(pwd) --home $HOME --env DISPLAY=$DISPLAY ../../louievdl_rstudio_450.sif # neglecting binding the .X11-unix # minimal but successful


## 2. BUILD R LIBRARIES INTO IMAGE

vi dockerfile_rstudio_l
sudo docker build -t louievdl/rstudio:4.5.0l -f dockerfile_rstudio_l --shm-size=64m .
sudo docker save --output ../../louievdl_rstudio_450l.tar louievdl/rstudio:4.5.0l
sudo chown $(id -u):$(id -g) ../../louievdl_rstudio_450l.tar
chmod a+r ../../louievdl_rstudio_450l.tar
apptainer build ../../louievdl_rstudio_450l.sif docker-archive://../../louievdl_rstudio_450l.tar
apptainer run --bind $(pwd):$(pwd):rw,/run --pwd $(pwd) --home $HOME --env DISPLAY=$DISPLAY ../../louievdl_rstudio_450l.sif # skip binding to .X11-unix, works under Windows 11 WSL2, but generates more error messages
apptainer run --bind /tmp/.X11-unix:/tmp/.X11-unix,$(pwd):$(pwd):rw,/run --pwd $(pwd) --home $HOME --env DISPLAY=$DISPLAY ../../louievdl_rstudio_450l.sif # to bind the Windows 11 WSL2 Ubuntu 24.04 .X11-unix to the expected location in the image


# NOTE: in --mount or --bind options orientation of dirs is always host-dir,image-dir
